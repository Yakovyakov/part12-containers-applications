services:
  app:
    image: todo-front-dev
    volumes:
      - ./todo-frontend:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    container_name: todo-front-dev # This will name the container hello-front-dev
    environment:
      VITE_BACKEND_URL: http://localhost:8080/api
    networks:
      - private_proxy_network  # private network (proxy --> app, server)
  server:
    image: todo-backend-dev
    volumes:
      - ./todo-backend:/usr/src/app
    container_name: todo-backend-dev
    environment:
      MONGO_URL: mongodb://the_username:the_password@mongo_server:27017/the_database
      REDIS_URL: redis://redis_server:6379
    networks:
      - private_proxy_network  # private network (proxy --> app, server)
      - private_server_network  # private network (server -->redis_server, mongo_server)
  mongo:
    image: initialized-mongo
    container_name: mongo_server
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - mongo_data:/data/db
    networks:
      - private_server_network  # private network (server -->redis_server, mongo_server)
  redis:
    image: redis:latest
    container_name: redis_server
    volumes:
      - redis_data:/data
    networks:
      - private_server_network  # private network (server -->redis_server, mongo_server)
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - app
      - server
    networks:
      - private_proxy_network  # private network (proxy --> app, server)
      - public_network  # private network (server -->redis_server, mongo_server)
networks:
  public_network:
    # External Network
  private_proxy_network:
    internal: true  # Private [ proxy ---> app, server ]Network
  private_server_network:
    internal: true  # Private [ server ---> redis_server, mongo_server ] Network
volumes:
  mongo_data:
  redis_data:

